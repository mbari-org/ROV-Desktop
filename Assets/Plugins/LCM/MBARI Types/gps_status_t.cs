/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace mwt
{
    public sealed class gps_status_t : LCM.LCM.LCMEncodable
    {
        public double utc_time_secs;
        public short position_fix_ind;
        public short satellites_used;
        public double hdop;
        public double undulation_m;
        public double diff_correction_age_s;
        public short diff_station_id;
 
        public gps_status_t()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xf26f741884a2911dL;
 
        static gps_status_t()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("mwt.gps_status_t"))
                return 0L;
 
            classes.Add("mwt.gps_status_t");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.utc_time_secs); 
 
            outs.Write(this.position_fix_ind); 
 
            outs.Write(this.satellites_used); 
 
            outs.Write(this.hdop); 
 
            outs.Write(this.undulation_m); 
 
            outs.Write(this.diff_correction_age_s); 
 
            outs.Write(this.diff_station_id); 
 
        }
 
        public gps_status_t(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public gps_status_t(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static mwt.gps_status_t _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            mwt.gps_status_t o = new mwt.gps_status_t();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.utc_time_secs = ins.ReadDouble();
 
            this.position_fix_ind = ins.ReadInt16();
 
            this.satellites_used = ins.ReadInt16();
 
            this.hdop = ins.ReadDouble();
 
            this.undulation_m = ins.ReadDouble();
 
            this.diff_correction_age_s = ins.ReadDouble();
 
            this.diff_station_id = ins.ReadInt16();
 
        }
 
        public mwt.gps_status_t Copy()
        {
            mwt.gps_status_t outobj = new mwt.gps_status_t();
            outobj.utc_time_secs = this.utc_time_secs;
 
            outobj.position_fix_ind = this.position_fix_ind;
 
            outobj.satellites_used = this.satellites_used;
 
            outobj.hdop = this.hdop;
 
            outobj.undulation_m = this.undulation_m;
 
            outobj.diff_correction_age_s = this.diff_correction_age_s;
 
            outobj.diff_station_id = this.diff_station_id;
 
            return outobj;
        }
    }
}

